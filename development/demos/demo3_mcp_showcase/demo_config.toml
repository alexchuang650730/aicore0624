[demo_settings]
name = "MCP Coordination Showcase"
description = "MCP协调和集成能力展示"
target_audience = "技术架构师、系统集成商、技术决策者"
version = "1.0.0"
author = "AICore Team"

[showcase_features]
smart_routing = true
component_coordination = true
performance_monitoring = true
load_balancing = true
fault_tolerance = false
auto_scaling = false

[visualization]
show_routing_decisions = true
show_component_status = true
show_performance_metrics = true
show_load_distribution = true
enable_real_time_updates = true

[routing_config]
max_routing_time = 100  # 毫秒
min_confidence_threshold = 0.8
enable_fallback_routing = true
routing_algorithm = "weighted_round_robin"

[coordination_config]
max_coordination_time = 5000  # 毫秒
enable_parallel_execution = true
coordination_strategy = "pipeline"
failure_handling = "graceful_degradation"

[monitoring_config]
metrics_collection_interval = 1000  # 毫秒
performance_threshold = {
    cpu_usage = 80.0,
    memory_usage = 85.0,
    response_time = 200.0,
    error_rate = 1.0
}
enable_alerting = false

[load_balancing_config]
balancing_algorithm = "least_connections"
max_tasks_per_expert = 10
enable_priority_queuing = true
rebalancing_interval = 5000  # 毫秒

[simulation_config]
# 智能路由模拟
routing_test_tasks = [
    {task_type = "code_generation", complexity = "high", language = "python"},
    {task_type = "testing", test_type = "integration", complexity = "medium"},
    {task_type = "optimization", target = "performance", complexity = "low"}
]

# 负载均衡模拟
load_balancing_tasks_count = 10
high_priority_tasks_ratio = 0.3

[output_config]
save_performance_report = true
save_showcase_report = true
output_directory = "output"
enable_json_export = true

[demo_flow]
features_order = [
    "smart_routing",
    "component_coordination",
    "performance_monitoring", 
    "load_balancing"
]

pause_between_features = false
auto_generate_report = true
show_summary_statistics = true

